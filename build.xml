<?xml version="1.0" encoding="UTF-8"?>
<!-- Ant build targets for deploy, a tar file is generated. -->

<project name="ezpublish" default="build" basedir=".">

    <!-- default environment can be overridden on cli for exp.: ant build -Denvironment=integration -->
    <property name="environment" value="dev" />
    <!-- load environment configuration -->
    <property file="${basedir}/build/config/${environment}.ini" />
    <!-- once defined properties are not overridden, so the order is essential -->
    <property file="${basedir}/build/config/default.ini" />

    <target name="build" depends="
        properties-create,
        configure,
        install-composer,
        install-vendors
    "/>

    <target name="deploy" depends="
        link-web-dir,
        set-filepermissions,
        migrate-database,
        autoloads-generate
    "/>

    <target name="build-package" depends="
        configure,
        package
    "/>

    <target name="configure" description="Copies configuration and replaces parameters with those from property ini file">
        <exec dir="${basedir}" executable="/usr/bin/perl" failonerror="true">
            <arg value="${basedir}/bin/ini2template.pl" />
            <arg value="--environment" />
            <arg value="/etc/myvideo/default.ini" />
            <arg value="--template" />
            <arg value="${basedir}/build/config/ezpublish_legacy/settings/override/redis.ini.append.php.tt2" />
        </exec>
        <exec dir="${basedir}" executable="/usr/bin/perl" failonerror="true">
            <arg value="${basedir}/bin/ini2template.pl" />
            <arg value="--environment" />
            <arg value="/etc/myvideo/default.ini" />
            <arg value="--template" />
            <arg value="${basedir}/build/config/ezpublish_legacy/settings/override/environment.ini.append.php.tt2" />
        </exec>
        <exec dir="${basedir}" executable="/usr/bin/perl" failonerror="true">
            <arg value="${basedir}/bin/ini2template.pl" />
            <arg value="--environment" />
            <arg value="/etc/myvideo/default.ini" />
            <arg value="--template" />
            <arg value="${basedir}/build/config/ezpublish_legacy/settings/override/site.ini.append.php.tt2" />
        </exec>
        <exec dir="${basedir}" executable="/usr/bin/perl" failonerror="true">
            <arg value="${basedir}/bin/ini2template.pl" />
            <arg value="--environment" />
            <arg value="/etc/myvideo/default.ini" />
            <arg value="--template" />
            <arg value="${basedir}/build/config/ezpublish/ezpublish.yml.tt2" />
        </exec>
        <exec dir="${basedir}" executable="/bin/mv">
            <arg value="${basedir}/build/config/ezpublish_legacy/settings/override/environment.ini.append.php" />
            <arg value="${basedir}/ezpublish/config/legacy_settings/override" />
        </exec>
        <exec dir="${basedir}" executable="/bin/mv">
            <arg value="${basedir}/build/config/ezpublish_legacy/settings/override/redis.ini.append.php" />
            <arg value="${basedir}/ezpublish/config/legacy_settings/override" />
        </exec>
        <exec dir="${basedir}" executable="/bin/mv">
            <arg value="${basedir}/build/config/ezpublish_legacy/settings/override/site.ini.append.php" />
            <arg value="${basedir}/ezpublish/config/legacy_settings/override" />
        </exec>
        <exec dir="${basedir}" executable="/bin/mv">
            <arg value="${basedir}/build/config/ezpublish/ezpublish.yml" />
            <arg value="${basedir}/ezpublish/config" />
        </exec>
    </target>


    <target name="properties-create" description="Create or update properties files for the project">
        <exec dir="${basedir}" executable="bin/generateBuildProperties.sh" failonerror="true" />
    </target>

    <target name="initialize-database" description="Puts the dump into the database.">
        <exec dir="${basedir}" executable="/usr/bin/sudo">
            <arg value="-u" />
            <arg value="postgres" />
            <arg value="${basedir}/bin/initDatabase.sh" />
        </exec>
    </target>

    <target name="install-composer" description="Install the composer phar file">
        <exec dir="${basedir}" executable="/usr/bin/php" failonerror="true">
            <arg value="-r" />
            <arg value="eval('?>'.file_get_contents('https://getcomposer.org/installer'));" />
        </exec>
    </target>

    <target name="set-filepermissions" description="Setting the filepermissions for the webserver group">
        <exec dir="${basedir}" executable="/bin/chmod" failonerror="true">
            <arg value="-R" />
            <arg value="g+w" />
            <arg value="web" />
            <arg value="ezpublish" />
            <arg value="ezpublish_legacy" />
        </exec>
        <exec dir="${basedir}" executable="/bin/chown" failonerror="true">
            <arg value="-R" />
            <arg value="www-data" />
            <arg value="ezpublish_legacy/var/ezflow_site" />
        </exec>
        <exec dir="${basedir}" executable="/bin/chown" failonerror="true">
            <arg value="-R" />
            <arg value="www-data" />
            <arg value="ezpublish_legacy/var/cache" />
        </exec>
    </target>

    <target name="install-vendors" description="Install ezPublish legacy and it's extensions.">
        <exec dir="${basedir}" executable="/usr/bin/php" failonerror="true">
            <arg value="composer.phar" />
            <arg value="install" />
            <arg value="--prefer-dist" />
	    </exec>
    </target>

    <target name="link-web-dir" description="linking legacy stuff into the web directory" >
        <exec dir="${basedir}" executable="/usr/bin/php" failonerror="true" >
            <arg value="ezpublish/console" />
            <arg value="assets:install" />
            <arg value="--symlink" />
            <arg value="web" />
        </exec>
        <exec dir="${basedir}" executable="/usr/bin/php" failonerror="true" >
            <arg value="ezpublish/console" />
            <arg value="ezpublish:legacy:assets_install" />
            <arg value="--symlink" />
            <arg value="web" />
        </exec>
    </target>


    <target name="autoloads-generate" description="Generates the ezpublish legacy autoload.php file" >
        <exec dir="${basedir}/ezpublish_legacy" executable="/usr/bin/php" failonerror="true">
            <arg value="bin/php/ezpgenerateautoloads.php" />
            <arg value="-e" />
            <arg value="-p" />
        </exec>
        <exec dir="${basedir}" executable="/usr/bin/php" failonerror="true">
            <arg value="composer.phar" />
            <arg value="dump-autoload" />
        </exec>
    </target>

    <target name="clear-cache" description="Clears the symfony and the EZpublish cache">
        <exec dir="${basedir}" executable="/usr/bin/php" failonerror="true">
            <arg value="ezpublish/console" />
            <arg value="cache:clear" />
        </exec>
    </target>

    <target name="migrate-database" description="Install the database migrations" >
        <exec dir="${basedir}" executable="/bin/bash" failonerror="true">
            <arg value="bin/migrations.sh" />
            <arg value="migrations:migrate" />
            <arg value="--no-interaction" />
        </exec>
    </target>

    <target name="package" description="Create a tar file of all files">
        <delete dir="/tmp/package/myvideo-ezpublish" />
        <copy todir="/tmp/package/myvideo-ezpublish">
                <fileset dir="${basedir}" />
        </copy>
        <exec dir="/tmp/package/myvideo-ezpublish" executable="find" failonerror="true">
                <arg value="." />
                <arg line=" -name .git -exec rm -rf {} \ ;" />
        </exec>
        <exec executable="tar" failonerror="true">
                <arg line=" --create --file myvideo-ezpublish-${version}.tar.gz --gzip --directory /tmp/package/myvideo-ezpublish/ ./" />
        </exec>
    </target>
    
    <target name="phpcs-ci"
            description="Find coding standard violations using PHP_CodeSniffer creating a log file for the continuous integration server">
        <mkdir dir="${basedir}/build/logs"/>
        <exec executable="phpcs" output="/dev/null">
            <arg value="--report=checkstyle"/>
            <arg value="--report-file=${basedir}/build/logs/checkstyle.xml"/>
            <arg value="--standard=${basedir}/build/phpcs.xml"/>
            <arg value="--ignore=*.js,*.css"/>
            <arg path="${basedir}/src/MyVideo"/>
        </exec>
    </target>
    
    <target name="phpmd-ci"
            description="Perform project mess detection using PHPMD creating a log file for the continuous integration server">
        <exec executable="phpmd">
            <arg path="${basedir}/src/MyVideo"/>
            <arg value="xml"/>
            <arg value="${basedir}/build/phpmd.xml"/>
            <arg value="--reportfile"/>
            <arg value="${basedir}/build/logs/pmd.xml"/>
            <arg line="--exclude"/>
            <arg line="*.js,*.css"/>
        </exec>
    </target>
    
    <target name="phpcpd" description="Find duplicate code using PHPCPD">
        <exec executable="phpcpd">
            <arg value="--log-pmd"/>
            <arg value="${basedir}/build/logs/pmd-cpd.xml"/>
            <arg line="--exclude"/>
            <arg line="*.js,*.css"/>
            <arg path="${basedir}/src/MyVideo"/>
        </exec>
    </target>
</project>

